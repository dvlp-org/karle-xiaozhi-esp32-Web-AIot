{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/lbg/Downloads/Clone-https___bestwallettoken.com_-%28fork%29%202/bestwallettoken-clone/src/locales/en.ts"],"sourcesContent":["export const en = {\n  nav: {\n    appName: 'XiaoZhi-AIoT·Nexus',\n    benefits: 'Benefits',\n    ecosystem: 'Ecosystem',\n    roadmap: 'Roadmap',\n    litepaper: 'Litepaper',\n    audit: 'Audit',\n    support: 'Support',\n    connectWallet: 'Control Console',\n\n    Welcome: 'Hi， Developer  Universe。 ',\n\n    Developer: 'Developer ',\n    Project: 'Project ',\n    Hardware: 'Hardware ',\n    Engagement: 'Day Run'\n  },\n  language: {\n    en: 'English',\n    es: 'Spanish',\n    fr: 'French',\n    de: 'German',\n    zh: 'Chinese'\n\n  }\n};"],"names":[],"mappings":";;;AAAO,MAAM,KAAK;IAChB,KAAK;QACH,SAAS;QACT,UAAU;QACV,WAAW;QACX,SAAS;QACT,WAAW;QACX,OAAO;QACP,SAAS;QACT,eAAe;QAEf,SAAS;QAET,WAAW;QACX,SAAS;QACT,UAAU;QACV,YAAY;IACd;IACA,UAAU;QACR,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;IAEN;AACF","debugId":null}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":["file:///Users/lbg/Downloads/Clone-https___bestwallettoken.com_-%28fork%29%202/bestwallettoken-clone/src/locales/zh.ts"],"sourcesContent":["export const zh = {\n  nav: {\n    appName: '小智AIoT·智联开发者',\n    benefits: '优势',\n    ecosystem: '生态系统',\n    roadmap: '路线图',\n    litepaper: '白皮书',\n    audit: '审计',\n    support: '支持',\n    connectWallet: '开放平台',\n\n    Welcome: '欢迎进入小智AIoT开发者世界！',\n\n    Developer: '开发者',\n    Project: '项目数',\n    Hardware: '硬件数',\n    Engagement: '活跃数'\n  },\n  language: {\n    en: '英文',\n    es: '西班牙语',\n    fr: '法语',\n    de: '德语',\n    zh: '中文'\n  }\n};"],"names":[],"mappings":";;;AAAO,MAAM,KAAK;IAChB,KAAK;QACH,SAAS;QACT,UAAU;QACV,WAAW;QACX,SAAS;QACT,WAAW;QACX,OAAO;QACP,SAAS;QACT,eAAe;QAEf,SAAS;QAET,WAAW;QACX,SAAS;QACT,UAAU;QACV,YAAY;IACd;IACA,UAAU;QACR,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;IACN;AACF","debugId":null}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":["file:///Users/lbg/Downloads/Clone-https___bestwallettoken.com_-%28fork%29%202/bestwallettoken-clone/src/contexts/LanguageContext.tsx"],"sourcesContent":["'use client';\n\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { en } from '@/locales/en';\nimport { zh } from '@/locales/zh';\n\ntype Language = 'en' | 'zh';\ntype Translations = typeof en;\n\ninterface LanguageContextType {\n  language: Language;\n  translations: Translations;\n  setLanguage: (lang: Language) => void;\n}\n\nconst translations = {\n  en,\n  zh,\n};\n\nconst LanguageContext = createContext<LanguageContextType | undefined>(undefined);\n\nexport function LanguageProvider({ children }: { children: React.ReactNode }) {\n  const [language, setLanguage] = useState<Language>('zh');\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem('language') as Language;\n    if (savedLanguage && translations[savedLanguage]) {\n      setLanguage(savedLanguage);\n    }\n  }, []);\n\n  const handleSetLanguage = (lang: Language) => {\n    setLanguage(lang);\n    localStorage.setItem('language', lang);\n  };\n\n  const value = {\n    language,\n    translations: translations[language],\n    setLanguage: handleSetLanguage,\n  };\n\n  return (\n    <LanguageContext.Provider value={value}>\n      {children}\n    </LanguageContext.Provider>\n  );\n}\n\nexport function useLanguage() {\n  const context = useContext(LanguageContext);\n  if (context === undefined) {\n    throw new Error('useLanguage must be used within a LanguageProvider');\n  }\n  return context;\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAJA;;;;;AAeA,MAAM,eAAe;IACnB,IAAA,oHAAA,CAAA,KAAE;IACF,IAAA,oHAAA,CAAA,KAAE;AACJ;AAEA,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAmC;AAEhE,SAAS,iBAAiB,EAAE,QAAQ,EAAiC;IAC1E,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY;IAEnD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,gBAAgB,aAAa,OAAO,CAAC;QAC3C,IAAI,iBAAiB,YAAY,CAAC,cAAc,EAAE;YAChD,YAAY;QACd;IACF,GAAG,EAAE;IAEL,MAAM,oBAAoB,CAAC;QACzB,YAAY;QACZ,aAAa,OAAO,CAAC,YAAY;IACnC;IAEA,MAAM,QAAQ;QACZ;QACA,cAAc,YAAY,CAAC,SAAS;QACpC,aAAa;IACf;IAEA,qBACE,8OAAC,gBAAgB,QAAQ;QAAC,OAAO;kBAC9B;;;;;;AAGP;AAEO,SAAS;IACd,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["file:///Users/lbg/Downloads/Clone-https___bestwallettoken.com_-%28fork%29%202/bestwallettoken-clone/src/app/ClientBody.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect } from \"react\";\nimport { LanguageProvider } from \"@/contexts/LanguageContext\";\n\nexport default function ClientBody({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  // Remove any extension-added classes during hydration\n  useEffect(() => {\n    // This runs only on the client after hydration\n    document.body.className = \"antialiased\";\n  }, []);\n\n  return (\n    <body className=\"antialiased\" suppressHydrationWarning data-nextjs-development-mode-indicator=\"false\">\n      <LanguageProvider>\n        {children}\n      </LanguageProvider>\n    </body>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKe,SAAS,WAAW,EACjC,QAAQ,EAGT;IACC,sDAAsD;IACtD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,+CAA+C;QAC/C,SAAS,IAAI,CAAC,SAAS,GAAG;IAC5B,GAAG,EAAE;IAEL,qBACE,8OAAC;QAAK,WAAU;QAAc,wBAAwB;QAAC,0CAAuC;kBAC5F,cAAA,8OAAC,mIAAA,CAAA,mBAAgB;sBACd;;;;;;;;;;;AAIT","debugId":null}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}